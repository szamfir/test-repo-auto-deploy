name: Apply Terraform Plan
on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: read

jobs:   
  get-environments:
    if: ${{github.actor != 'github-actions'}}    
    runs-on: ubuntu-latest    
    outputs:      
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Print Github Variables
        run: |
          echo "GITHUB_WORKFLOW:$GITHUB_WORKFLOW"
          echo "GITHUB_EVENT_NAME:$GITHUB_EVENT_NAME"
          echo "GITHUB_EVENT_PATH:$GITHUB_EVENT_PATH"
          echo "GITHUB_WORKSPACE:$GITHUB_WORKSPACE"
          echo "GITHUB_SHA:$GITHUB_SHA"
          echo "GITHUB_REF:$GITHUB_REF"
          echo "GITHUB_HEAD_REF:$GITHUB_HEAD_REF"
          echo "GITHUB_REF_NAME:$GITHUB_REF_NAME"
          echo "GITHUB_BASE_REF:$GITHUB_BASE_REF"
          printenv

      # run terraform apply on all artifacts...more
      - name: Terraform Apply
        id: apply
        working-directory: ${{env.upload_dir}}             
        env:          
          GITHUB_TOKEN: ${{ github.token }}      
        shell: bash
        run: |

          ref_head=$(gh pr list --state merged --json headRefName --limit 1 | awk -F':' '{print $2}' | awk -F'}' '{print $1}')
          echo $ref_head
          run_id=$(gh run list --workflow "Create Terraform Plan" --branch $ref_head --limit 1 --json databaseId | awk -F':' '{print $2}' | awk -F'}' '{print $1}')
          echo $run_id          